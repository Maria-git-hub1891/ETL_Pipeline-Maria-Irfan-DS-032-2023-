import pandas as pd

# Sample: assume data is already loaded in a DataFrame called `df`
# df = pd.read_csv("data.csv")

# --- CLEANING ---

# 1. Drop duplicates
df.drop_duplicates(inplace=True)

# 2. Drop empty rows (or specific threshold of NaNs)
df.dropna(how='all', inplace=True)

# 3. Standardize column names
df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

# 4. Convert date columns
if 'date' in df.columns:
    df['date'] = pd.to_datetime(df['date'], errors='coerce')

# 5. Fill missing values
df.fillna({
    'column1': 0,              # numeric column
    'column2': 'Unknown',      # string column
}, inplace=True)

# 6. Type conversions
df['some_column'] = df['some_column'].astype(str)

# 7. Remove outliers (optional)
# Example: remove rows where value is above 99th percentile
# df = df[df['value_column'] < df['value_column'].quantile(0.99)]
# --- TRANSFORMATION ---

# 1. Create new columns
df['year'] = df['date'].dt.year if 'date' in df.columns else None

# 2. Aggregation example
summary = df.groupby('category_column')['amount_column'].sum().reset_index()

# 3. Feature Engineering
df['revenue_per_unit'] = df['total_revenue'] / df['units_sold']

# 4. Encoding categories (for ML or analytics)
df['encoded_category'] = df['category_column'].astype('category').cat.codes
# Preview cleaned and transformed data
print(df.head())

# Optionally save it for loading in next steps
df.to_csv("cleaned_transformed_data.csv", index=False)
